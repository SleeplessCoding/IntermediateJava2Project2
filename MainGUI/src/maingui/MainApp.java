/* IT252 Intermediate Java Programming II Created 10/08/16
 * This application uses GUI to allow a user to input data into a sales form.
 * that data is then stored in the program within the AccountInfo class.
 */
package maingui;

import java.io.File;
import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Nicholas Weinold
 */
public class MainApp extends javax.swing.JFrame {

    /**
     * Creates new form MainApp
     */
    public MainApp() {
        initComponents();
        idError.setVisible(false);
        districtError.setVisible(false);
        fNameError.setVisible(false);
        lNameError.setVisible(false);
        prefContError.setVisible(false);
        contInfoError.setVisible(false);
        offTotError.setVisible(false);
        bookTotError.setVisible(false);
        papTotError.setVisible(false);
        requiredError.setVisible(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        enterButton = new javax.swing.JButton();
        quitButton = new javax.swing.JButton();
        idLabel = new javax.swing.JLabel();
        fNameLabel = new javax.swing.JLabel();
        lNameLabel = new javax.swing.JLabel();
        districtCombo = new javax.swing.JComboBox<>();
        salesIdInput = new javax.swing.JTextField();
        lastNameInput = new javax.swing.JTextField();
        firstNameInput = new javax.swing.JTextField();
        districtLabel = new javax.swing.JLabel();
        prefConLabel = new javax.swing.JLabel();
        prefContactInput = new javax.swing.JTextField();
        prefContCombo = new javax.swing.JComboBox<>();
        offTotLabel = new javax.swing.JLabel();
        bookTotLabel = new javax.swing.JLabel();
        papTotLabel = new javax.swing.JLabel();
        officeTotalInput = new javax.swing.JTextField();
        bookTotalInput = new javax.swing.JTextField();
        paperTotalInput = new javax.swing.JTextField();
        districtError = new javax.swing.JLabel();
        idError = new javax.swing.JLabel();
        fNameError = new javax.swing.JLabel();
        lNameError = new javax.swing.JLabel();
        prefContError = new javax.swing.JLabel();
        contInfoError = new javax.swing.JLabel();
        offTotError = new javax.swing.JLabel();
        bookTotError = new javax.swing.JLabel();
        papTotError = new javax.swing.JLabel();
        requiredError = new javax.swing.JLabel();
        evaluateButton = new javax.swing.JButton();
        displayButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        starsOutput = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Main Application");
        setBackground(new java.awt.Color(255, 255, 255));
        setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N

        enterButton.setFont(new java.awt.Font("Cambria", 1, 12)); // NOI18N
        enterButton.setText("ENTER");
        enterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterButtonActionPerformed(evt);
            }
        });

        quitButton.setFont(new java.awt.Font("Cambria", 1, 12)); // NOI18N
        quitButton.setText("QUIT");
        quitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitButtonActionPerformed(evt);
            }
        });

        idLabel.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        idLabel.setText("Sales Rep ID");

        fNameLabel.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        fNameLabel.setText("First Name");

        lNameLabel.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        lNameLabel.setText("Last Name");

        districtCombo.setFont(new java.awt.Font("Cambria", 0, 11)); // NOI18N
        districtCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- - - -", "North", "South", "East", "West" }));
        districtCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                districtComboActionPerformed(evt);
            }
        });

        salesIdInput.setFont(new java.awt.Font("Cambria", 0, 11)); // NOI18N

        lastNameInput.setFont(new java.awt.Font("Cambria", 0, 11)); // NOI18N

        firstNameInput.setFont(new java.awt.Font("Cambria", 0, 11)); // NOI18N

        districtLabel.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        districtLabel.setText("District");

        prefConLabel.setFont(new java.awt.Font("Cambria", 1, 12)); // NOI18N
        prefConLabel.setText("Preferred Contact");

        prefContactInput.setFont(new java.awt.Font("Cambria", 0, 11)); // NOI18N

        prefContCombo.setFont(new java.awt.Font("Cambria", 0, 11)); // NOI18N
        prefContCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- - - -", "Phone", "Email", "Visit" }));

        offTotLabel.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        offTotLabel.setText("Office Total");

        bookTotLabel.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        bookTotLabel.setText("Books Total");

        papTotLabel.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        papTotLabel.setText("Paper Total");

        officeTotalInput.setFont(new java.awt.Font("Cambria", 0, 11)); // NOI18N

        bookTotalInput.setFont(new java.awt.Font("Cambria", 0, 11)); // NOI18N

        paperTotalInput.setFont(new java.awt.Font("Cambria", 0, 11)); // NOI18N

        districtError.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        districtError.setForeground(new java.awt.Color(255, 0, 51));
        districtError.setText("*");

        idError.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        idError.setForeground(new java.awt.Color(255, 0, 51));
        idError.setText("*");

        fNameError.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        fNameError.setForeground(new java.awt.Color(255, 0, 51));
        fNameError.setText("*");

        lNameError.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lNameError.setForeground(new java.awt.Color(255, 0, 51));
        lNameError.setText("*");

        prefContError.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        prefContError.setForeground(new java.awt.Color(255, 0, 51));
        prefContError.setText("*");

        contInfoError.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        contInfoError.setForeground(new java.awt.Color(255, 0, 51));
        contInfoError.setText("*");

        offTotError.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        offTotError.setForeground(new java.awt.Color(255, 0, 51));
        offTotError.setText("*");

        bookTotError.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        bookTotError.setForeground(new java.awt.Color(255, 0, 51));
        bookTotError.setText("*");

        papTotError.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        papTotError.setForeground(new java.awt.Color(255, 0, 51));
        papTotError.setText("*");

        requiredError.setFont(new java.awt.Font("Cambria", 1, 12)); // NOI18N
        requiredError.setForeground(new java.awt.Color(255, 0, 51));
        requiredError.setText("* Required Fields");

        evaluateButton.setFont(new java.awt.Font("Cambria", 1, 12)); // NOI18N
        evaluateButton.setText("EVALUATE");
        evaluateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                evaluateButtonActionPerformed(evt);
            }
        });

        displayButton.setFont(new java.awt.Font("Cambria", 1, 12)); // NOI18N
        displayButton.setText("DISPLAY");
        displayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayButtonActionPerformed(evt);
            }
        });

        starsOutput.setEditable(false);
        starsOutput.setColumns(20);
        starsOutput.setRows(5);
        jScrollPane1.setViewportView(starsOutput);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(bookTotalInput, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(offTotLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(officeTotalInput, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 5, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bookTotError, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(offTotError, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(prefContactInput, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(contInfoError))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(prefConLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(prefContCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(prefContError))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(idLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(salesIdInput, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(idError)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(districtLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(districtCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(3, 3, 3))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(fNameLabel)
                                .addGap(18, 18, 18)
                                .addComponent(firstNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(lNameLabel)
                                .addGap(18, 18, 18)
                                .addComponent(lastNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(districtError, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(fNameError, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lNameError, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(displayButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(evaluateButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(enterButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(quitButton))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(papTotLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(bookTotLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(paperTotalInput, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(papTotError))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(requiredError))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idLabel)
                    .addComponent(salesIdInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(districtLabel)
                    .addComponent(districtCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idError)
                    .addComponent(districtError))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fNameLabel)
                    .addComponent(firstNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fNameError))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lNameLabel)
                    .addComponent(lastNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lNameError))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prefConLabel)
                    .addComponent(prefContCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(prefContError))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prefContactInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(contInfoError))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(offTotLabel)
                    .addComponent(officeTotalInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(offTotError))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bookTotLabel)
                    .addComponent(bookTotalInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bookTotError))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(papTotLabel)
                    .addComponent(paperTotalInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(papTotError))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(requiredError)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(displayButton)
                    .addComponent(quitButton)
                    .addComponent(enterButton)
                    .addComponent(evaluateButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void districtComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_districtComboActionPerformed

    }//GEN-LAST:event_districtComboActionPerformed

    private void enterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterButtonActionPerformed
        
        Boolean allFieldsComplete = true;
        AccountInfo aI = new AccountInfo();
        
        String firstName = firstNameInput.getText();
        if (firstName.trim().length()==0)
        {
            fNameError.setVisible(true);
            requiredError.setVisible(true);
            allFieldsComplete = false;
        } else
        {
            aI.setFirstName(firstName);
            fNameError.setVisible(false);
        }
        String lastName = lastNameInput.getText();
        if (lastName.trim().length()==0)
        {
            lNameError.setVisible(true);
            requiredError.setVisible(true);
            allFieldsComplete = false;
        } else
        {
            lNameError.setVisible(false);
            aI.setLastName(lastName);
        }
        String prefContTextInput = prefContactInput.getText();
        if (prefContTextInput.trim().length()==0)
        {
            contInfoError.setVisible(true);
            requiredError.setVisible(true);
            allFieldsComplete = false;
        } else
        {
            contInfoError.setVisible(false);
            aI.setContactInfo(prefContTextInput);
        }
        String salesId = salesIdInput.getText();
        try
        {
            //int idNumber = Integer.parseInt(salesId);
            if (salesId.trim().length()==0)
            {
                idError.setVisible(true);
                requiredError.setVisible(true);
                allFieldsComplete = false;
            }else
            {
                idError.setVisible(false);
                aI.setSalesId(Integer.parseInt(salesId));
            }
        } catch (Exception e)
        {
            JOptionPane.showMessageDialog(this, "Sales ID must be a number");
            salesIdInput.setText("");
            allFieldsComplete = false;
            idError.setVisible(true);
            requiredError.setVisible(true);
        }
        String officeTotal = officeTotalInput.getText();
        try
        {
            //double officeSale = Double.parseDouble(officeTotal);
            if (officeTotal.trim().length()==0)
            {
                offTotError.setVisible(true);
                requiredError.setVisible(true);
                allFieldsComplete = false;
            } else
            {
                offTotError.setVisible(false);
                aI.setOfficeTotal(Double.parseDouble(officeTotal));
            }
        } catch (Exception e)
        {
            JOptionPane.showMessageDialog(this, "Office total must be a number");
            officeTotalInput.setText("");
            allFieldsComplete = false;
            offTotError.setVisible(true);
            requiredError.setVisible(true);
        }
        String bookTotal = bookTotalInput.getText();
        try
        {
            //double officeSale = Double.parseDouble(officeTotal);
            if (bookTotal.trim().length()==0)
            {
                bookTotError.setVisible(true);
                requiredError.setVisible(true);
                allFieldsComplete = false;
            } else
            {
                bookTotError.setVisible(false);
                aI.setBookTotal(Double.parseDouble(bookTotal));
            }
        } catch (Exception e)
        {
            JOptionPane.showMessageDialog(this, "Book total must be a number");
            bookTotalInput.setText("");
            allFieldsComplete = false;
            bookTotError.setVisible(true);
            requiredError.setVisible(true);
        }
        String paperTotal = paperTotalInput.getText();
        try
        {
            //double officeSale = Double.parseDouble(officeTotal);
            if (paperTotal.trim().length()==0)
            {
                papTotError.setVisible(true);
                requiredError.setVisible(true);
                allFieldsComplete = false;
            }else
            {
                papTotError.setVisible(false);
                aI.setPaperTotal(Double.parseDouble(paperTotal));
            }
        } catch (Exception e)
        {
            JOptionPane.showMessageDialog(this, "Paper total must be a number");
            paperTotalInput.setText("");
            allFieldsComplete = false;
            papTotError.setVisible(true);
            requiredError.setVisible(true);
        }
        int districtInput = districtCombo.getSelectedIndex();
        if (districtInput ==0)
        {
            districtError.setVisible(true);
            requiredError.setVisible(true);
            allFieldsComplete = false;
        }else
        {
            districtError.setVisible(false);
            aI.setDistrict((String) districtCombo.getSelectedItem());
        }
        int prefContInput = prefContCombo.getSelectedIndex();
        if (prefContInput ==0)
        {
            prefContError.setVisible(true);
            requiredError.setVisible(true);
            allFieldsComplete = false;
        }else
        {
            prefContError.setVisible(false);
            aI.setPrefContact((String) prefContCombo.getSelectedItem());
        }
        if (allFieldsComplete)
        {
            try 
            {
                    requiredError.setVisible(false);  
                    
                    AccountStorage as = new AccountStorage();
                    as.writeToAccount(aI);
                                
                    firstNameInput.setText("");
                    lastNameInput.setText("");
                    salesIdInput.setText("");
                    districtCombo.setSelectedIndex(0);
                    prefContCombo.setSelectedIndex(0);
                    prefContactInput.setText("");
                    officeTotalInput.setText("");
                    bookTotalInput.setText("");
                    paperTotalInput.setText("");
                    
                    JOptionPane.showMessageDialog(this, "Saved to File");
                    
                } catch (IOException ex) 
                {
                    
                    JOptionPane.showMessageDialog(this, "Error writing to file");
                    
                    Logger.getLogger(MainApp.class.getName())
                                .log(Level.SEVERE, null, ex);
                }

        }
    }//GEN-LAST:event_enterButtonActionPerformed

    private void quitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitButtonActionPerformed
        int quitConfirm = JOptionPane.showConfirmDialog(this,
                "Are you sure you want to exit without saving?");
        if (quitConfirm == JOptionPane.YES_OPTION)
        {
        System.exit(0);
        } else
        {
            
        }
    }//GEN-LAST:event_quitButtonActionPerformed

    private void evaluateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_evaluateButtonActionPerformed
        
        
        ReadAccounts reader = new ReadAccounts();
        try 
        {
            
            List<AccountInfo> accounts = reader.readAccounts("Accounts.txt");
            StarsFinder sf = new StarsFinder();
            StarsStorage ss = new StarsStorage();
            ss.clearStars();
            sf.findStars(accounts);
            //ss.writeToStars("");
            //ss.writeToStars(sf.findStars(accounts));

        } catch (IOException ex) 
        {
            JOptionPane.showMessageDialog(this, "Unable to open File");
            Logger.getLogger(MainApp.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        JOptionPane.showMessageDialog(this, "Stars Updated!");
    }//GEN-LAST:event_evaluateButtonActionPerformed

    private void displayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayButtonActionPerformed
    ReadAccounts reader = new ReadAccounts();
        try 
        {
            starsOutput.setText("");
            List<SalesRepresentative> stars = reader.readStars("Stars.txt");
            int repCount = stars.size();

                starsOutput.append("Total Sales Representatives : " 
                        + repCount + "\n\n");
                for (SalesRepresentative sr : stars)
                {
                    
                    starsOutput.append(""+sr);
                }

        } catch (IOException ex) 
        {
            JOptionPane.showMessageDialog(this, "Unable to display Stars");
            Logger.getLogger(MainApp.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_displayButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainApp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bookTotError;
    private javax.swing.JLabel bookTotLabel;
    private javax.swing.JTextField bookTotalInput;
    private javax.swing.JLabel contInfoError;
    private javax.swing.JButton displayButton;
    private javax.swing.JComboBox<String> districtCombo;
    private javax.swing.JLabel districtError;
    private javax.swing.JLabel districtLabel;
    private javax.swing.JButton enterButton;
    private javax.swing.JButton evaluateButton;
    private javax.swing.JLabel fNameError;
    private javax.swing.JLabel fNameLabel;
    private javax.swing.JTextField firstNameInput;
    private javax.swing.JLabel idError;
    private javax.swing.JLabel idLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lNameError;
    private javax.swing.JLabel lNameLabel;
    private javax.swing.JTextField lastNameInput;
    private javax.swing.JLabel offTotError;
    private javax.swing.JLabel offTotLabel;
    private javax.swing.JTextField officeTotalInput;
    private javax.swing.JLabel papTotError;
    private javax.swing.JLabel papTotLabel;
    private javax.swing.JTextField paperTotalInput;
    private javax.swing.JLabel prefConLabel;
    private javax.swing.JComboBox<String> prefContCombo;
    private javax.swing.JLabel prefContError;
    private javax.swing.JTextField prefContactInput;
    private javax.swing.JButton quitButton;
    private javax.swing.JLabel requiredError;
    private javax.swing.JTextField salesIdInput;
    private javax.swing.JTextArea starsOutput;
    // End of variables declaration//GEN-END:variables
}
